<AML>
 <Item type="Method" id="466C33A01DBD45E98428CA65951E9D57" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[top.hidePartTabsByBusinessLogic = function () {
	// If the tabbar is not yet ready, wait a bit and call the function recursively 
    if (!parent.relationships || !parent.relationships.relTabbarReady || parent.relationships.relTabbar.GetTabOrder("|") === "") {
        setTimeout("top.hidePartTabsByBusinessLogic()", 30);
        return;
    }
	/*
	// Sample code from the dev team included this code to wait for the gridApplet to load, which is not needed in this case
    //additional logic to make sure the gridApplet is loaded
    var selTabId = parent.relationships.relTabbar.GetSelectedTab();
    var grid = parent.relationships.iframesCollection[selTabId].contentWindow.gridApplet;
    if (!grid) {
        setTimeout("top.hidePartTabsByBusinessLogic();", 30);
        return;
    }
	*/
    //find the tab and hide it
    setTimeout(function() {
		//debugger;
		var tabbar = top.window.relationships.relTabbar ;
		var is_structure= (document.thisItem.getProperty("classification","")==="Structure");
        var tabIDSteps = tabbar.GetTabId("User Steps");  // this method seems to use the Label, not the relationship Name
		var tabIDMultiL = tabbar.GetTabId("MultiLevel");   // ditto
		if (tabIDSteps !== null && tabIDSteps!== 0&&is_structure) {
            // tab to hide found 
            tabbar.SetTabVisible(tabIDSteps, !is_structure);
        }
		if (tabIDMultiL !== null && tabIDMultiL!== 0&&!is_structure) {
            // tab to hide found 
            tabbar.SetTabVisible(tabIDMultiL, is_structure);
        }
    }, 500); // To allow correct execution of inner dojo event

};
setTimeout("top.hidePartTabsByBusinessLogic()", 30);



]]></method_code>
  <method_type>JavaScript</method_type>
  <name>userstory_hide_show_tabs</name>
 </Item>
</AML>